<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"  xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/task 
						http://www.springframework.org/schema/task/spring-task.xsd"
						
	default-autowire="byName" default-lazy-init="true">


	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />
	
		
	<context:component-scan base-package="com.ix.api" />
	

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.ix.core.base.CustomInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
    
    <bean id="viewResolverCommon" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/pages/"/>
      <property name="suffix" value=".jsp"/>
      <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
      <property name="order" value="1"/>    
    </bean>
    
    
        <!-- 配置freeMarker视图解析器 -->
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewNames" value="*.html" />
        <property name="contentType" value="text/html; charset=utf-8" />
        <property name="cache" value="true" />
        <property name="prefix" value="/pages/"/> 
        <property name="suffix" value=""/> 
        <property name="order" value="0"/> 
        <property name="exposeRequestAttributes" value="true" />
        <property name="allowSessionOverride" value="true" />
        <property name="exposeSessionAttributes" value="true" />
        <property name="exposeSpringMacroHelpers" value="true" />
    </bean> 
      
   <!-- 配置freeMarker的模板路径 -->
    <bean id="freemarkerConfig"
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/"/>
        <property name="defaultEncoding" value="UTF-8" /> 
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape" />
            </map>
        </property>
<!--         <property name="freemarkerSettings"> -->
<!--             <props> -->
<!--                 <prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop> -->
<!--             </props> -->
<!--         </property> -->
    </bean>
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 --> 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
        <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
        <property name="maxUploadSize" value="20971520"/> 
         <property name="defaultEncoding" value="UTF-8" />
    </bean>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<bean id="exceptionResolver" class="com.ix.core.base.CustomExceptionResolver" />

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="com.ix.core.base.MyDataBinding" />
		</property>
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动对@AspectJ注解的支持  --> 
 	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 切面扫描 -->
	<aop:aspectj-autoproxy/>

</beans>